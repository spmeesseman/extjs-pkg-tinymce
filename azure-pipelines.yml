# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
# 
# pool:
#   vmImage: 'Ubuntu-16.04'
# 
# steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '10.x'
#   displayName: 'Install Node.js'
# 
# - script: |
#     npm install
#     npm run build
#   displayName: 'npm install and build'
# 

jobs:
  - job: Linux
    strategy:
      matrix:
        Code26:
          CODE_VERSION: '1.26.0'
        CodeCurrent:
          CODE_VERSION: '*'
        CodeInssiders:
          CODE_VERSION: 'insiders'
    pool:
      name: Hosted Ubuntu 1604
      demands: npm
    steps:
      - task: NodeTool@0
        displayName: 'Use Node 8.x'
        inputs:
          versionSpec: 8.x
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          verbose: true
          azureSubscription: 'senchaprivaterepo'
          #command: 'install' # Options: install, publish, custom
          #workingDir: # Optional
          #verbose: # Optional
          #customCommand: # Required when command == Custom
          #customRegistry: 'useNpmrc' # Optional. Options: useNpmrc, useFeed
          #customFeed: 'h'
          #customEndpoint: # Optional
          #publishRegistry: 'useExternalRegistry' # Optional. Options: useExternalRegistry, useFeed
          #publishFeed: # Required when publishRegistry == UseFeed
          #publishPackageMetadata: true # Optional
          #publishEndpoint: # Required when publishRegistry == UseExternalRegistry
      #- task: Npm@1
        #displayName: 'Install dependencies'
        #inputs:
        #  verbose: false
        #  azureSubscription: 'senchaprivaterepo'
      - task: Npm@1
        displayName: 'Compile sources'
        inputs:
          command: custom
          verbose: false
          customCommand: 'run build'
      - script: |
          set -e
          /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
          disown -ar
        displayName: 'Start xvfb'
      - bash: sed -i.bak 's/"\*"//g' package.json
        displayName: 'Enable full coverage'
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'test-reports/*.xml'
          mergeTestResults: true
          testRunTitle: '$(Agent.OS) $(Agent.JobName)'
      - task: PublishCodeCoverageResults@1
        displayName: 'Publish Code Coverage to Azure'
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/coverage/lcov-report'
      - script: node_modules/.bin/codecov --disable=gcov
        displayName: 'Publish Code Coverage to Codecov'
        env:
          CODECOV_TOKEN: $(codecovToken)
  - job: Release
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn:
    - Linux
    pool:
      name: Hosted Ubuntu 1604
      demands: npm
    steps:
      - task: NodeTool@0
        displayName: 'Use Node 8.x'
        inputs:
          versionSpec: 8.x
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          verbose: false
      - task: Npm@1
        displayName: 'Compile sources'
        inputs:
          command: custom
          verbose: false
          customCommand: 'run build'
      - script: |
          set -e
          /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
          disown -ar
        displayName: 'Start xvfb'
      - task: Npm@1
        displayName: 'Run semantic-release'
        inputs:
          command: custom
          verbose: false
          customCommand: 'run semantic-release'
        env:
          GH_TOKEN: $(githubToken)
          NPM_TOKEN: $(npmToken)
          GIT_AUTHOR_EMAIL: $(gitEmail)
          GIT_COMMITTER_EMAIL: $(gitEmail)
          GIT_AUTHOR_NAME: $(gitName)
          GIT_COMMITTER_NAME: $(gitName)
